---
- hosts: all
  sudo: yes
  vars_files:
    - vars/dsa-deploy.yml
  tasks:
    - name: Configure the playbook for the current distribution
      include_vars: '{{ item }}'
      with_first_found:
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version|truncate(2) }}.yml"
        - "vars/default.yml"

    - name: Update user
      debug: msg="Selected agent is {{ ansible_distribution }}-{{ ansible_distribution_major_version|truncate(2) }}"

    - name: Update user
      debug: msg="Downloading agent from https://{{ dsm_agent_download_hostname }}:{{ dsm_agent_download_port }}/{{ agent_relative_path }}/{{ ansible_architecture }}/"

    - name: Download the Deep Security agent
      get_url: url="https://{{ dsm_agent_download_hostname }}:{{ dsm_agent_download_port }}/{{ agent_relative_path }}/{{ ansible_architecture }}/" dest="{{ agent_local_path }}" validate_certs=no

    - name: Install the Deep Security agent
      yum: name={{ agent_local_path }} state=installed update_cache=true
      when: ansible_pkg_mgr == "yum"

    - name: Install the Deep Security agent
      apt: deb={{ agent_local_path }} state=present update_cache=true
      when: ansible_pkg_mgr == "apt"

    - name: Install the Deep Security agent
      zypper: name={{ agent_local_path }} state=present
      when: ansible_pkg_mgr == "zypper"

    - name: Reset the Deep Security agent
      command: /opt/ds_agent/dsa_control -r

    - name: Make sure the agent has gathered the required metadata
      pause: seconds=7

    - name: Activate the Deep Security agent
      command: /opt/ds_agent/dsa_control -a dsm://{{ dsa_activation_hostname }}:{{ dsa_activation_port }}/ "tenantID:{{ tenant_id }}" "tenantPassword:{{ tenant_password }}"
